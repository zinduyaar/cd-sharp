{"version":3,"file":"static/js/720.3c338ad8.chunk.js","mappings":"kKAWM,MAAOA,UAAuBC,EAAAA,GAClC,wBAAMC,CAAmBC,GACvB,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,UAAUC,YAAYN,oBACpBO,IACEJ,EAAQI,EAAI,IAEdC,IACEJ,EAAOI,EAAI,GACZC,OAAAC,OAAA,CAECC,oBAAoB,EACpBC,QAAS,IACTC,WAAY,GACTZ,GAEN,GAEL,CAEA,mBAAMa,CACJb,EACAc,GAEA,MAAMC,EAAKX,UAAUC,YAAYQ,eAC/BP,IACEQ,EAASR,EAAI,IAEfC,IACEO,EAAS,KAAMP,EAAI,GACpBC,OAAAC,OAAA,CAECC,oBAAoB,EACpBC,QAAS,IACTC,WAAY,GACTZ,IAIP,MAAO,GAAPgB,OAAUD,EACZ,CAEA,gBAAME,CAAWjB,GACfkB,OAAOd,UAAUC,YAAYY,WAAWE,SAASnB,EAAQe,GAAI,IAC/D,CAEA,sBAAMK,GACJ,GAAyB,qBAAdhB,YAA8BA,UAAUiB,YACjD,MAAMC,KAAKC,YAAY,iDAGzB,MAAMC,QAAmBN,OAAOd,UAAUiB,YAAYI,MAAM,CAC1DC,KAAM,gBAER,MAAO,CAAEC,SAAUH,EAAWI,MAAOC,eAAgBL,EAAWI,MAClE,CAEA,wBAAME,GACJ,MAAMR,KAAKS,cAAc,0BAC3B,EAGF,MAAMC,EAAc,IAAInC,C","sources":["../node_modules/@capacitor/geolocation/src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  CallbackID,\n  GeolocationPlugin,\n  PermissionStatus,\n  Position,\n  PositionOptions,\n  WatchPositionCallback,\n} from './definitions';\n\nexport class GeolocationWeb extends WebPlugin implements GeolocationPlugin {\n  async getCurrentPosition(options?: PositionOptions): Promise<Position> {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(\n        pos => {\n          resolve(pos);\n        },\n        err => {\n          reject(err);\n        },\n        {\n          enableHighAccuracy: false,\n          timeout: 10000,\n          maximumAge: 0,\n          ...options,\n        },\n      );\n    });\n  }\n\n  async watchPosition(\n    options: PositionOptions,\n    callback: WatchPositionCallback,\n  ): Promise<CallbackID> {\n    const id = navigator.geolocation.watchPosition(\n      pos => {\n        callback(pos);\n      },\n      err => {\n        callback(null, err);\n      },\n      {\n        enableHighAccuracy: false,\n        timeout: 10000,\n        maximumAge: 0,\n        ...options,\n      },\n    );\n\n    return `${id}`;\n  }\n\n  async clearWatch(options: { id: string }): Promise<void> {\n    window.navigator.geolocation.clearWatch(parseInt(options.id, 10));\n  }\n\n  async checkPermissions(): Promise<PermissionStatus> {\n    if (typeof navigator === 'undefined' || !navigator.permissions) {\n      throw this.unavailable('Permissions API not available in this browser');\n    }\n\n    const permission = await window.navigator.permissions.query({\n      name: 'geolocation',\n    });\n    return { location: permission.state, coarseLocation: permission.state };\n  }\n\n  async requestPermissions(): Promise<PermissionStatus> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n}\n\nconst Geolocation = new GeolocationWeb();\n\nexport { Geolocation };\n"],"names":["GeolocationWeb","WebPlugin","getCurrentPosition","options","Promise","resolve","reject","navigator","geolocation","pos","err","Object","assign","enableHighAccuracy","timeout","maximumAge","watchPosition","callback","id","concat","clearWatch","window","parseInt","checkPermissions","permissions","this","unavailable","permission","query","name","location","state","coarseLocation","requestPermissions","unimplemented","Geolocation"],"sourceRoot":""}